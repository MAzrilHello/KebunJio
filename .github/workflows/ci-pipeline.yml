name: Build and Test  # CI/CD Pipeline Name

on:
  push:
    branches:
      - staging_v2_test  # Runs only on pushes to this branch
    paths:
      - 'Backend/**'  # Triggers if Backend files are modified
      - 'Mobile/**'  # Triggers if Mobile files are modified
      - 'Web/**'  # Triggers if Web files are modified

permissions:
  security-events: write  
  actions: read  
  contents: read

jobs:

  # Backend: Build and Test
  build-and-test-backend:
    name: Build and Test Backend
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up JDK 17 for Backend
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Cache Maven dependencies for faster builds
      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Build Backend
      - name: Build Backend
        working-directory: Backend/KebunJio
        run: mvn clean install -DskipTests=true

      # Step 5: Run Backend Tests (With Debug Logging)
      - name: Run Tests with Debug Logging
        working-directory: Backend/KebunJio
        run: mvn test -X || true  

      # Step 6: Upload JUnit Test Reports
      - name: Upload Test Reports (Always Run)
        if: always()  
        uses: actions/upload-artifact@v4
        with:
          name: junit-reports
          path: Backend/KebunJio/target/surefire-reports/

  # Mobile: Build Android App
  mobile:
    name: Build Mobile
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Java 17 for Android
      - name: Set up JDK 17 for Mobile
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          
      # Step 3: Grant Execute Permissions for Gradle Wrapper
      - name: Grant execute permissions for gradlew
        working-directory: Mobile
        run: chmod +x gradlew
        
      # Step 4: Build Mobile App (Debug Mode)
      - name: Build Mobile App
        working-directory: Mobile
        run: ./gradlew assembleDebug --stacktrace

  # Frontend: Build and Security Tests (ESLint + Snyk)
  frontend:
    name: Build and Test React Frontend
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js for Frontend
      - name: Set up Node.js for Frontend
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: Web/kebunjio/package-lock.json

      # Step 3: Install Frontend Dependencies
      - name: Install Frontend Dependencies
        working-directory: Web/kebunjio
        run: npm ci && npm install -g snyk

      # Step 4: Run ESLint Security Checks (JSX & JavaScript)
      - name: Run ESLint Security Checks
        working-directory: Web/kebunjio
        run: npx eslint . --ext .js,.jsx -f json -o eslint-report.json

      - name: Upload ESLint Report
        uses: actions/upload-artifact@v4
        with:
          name: eslint-reports
          path: Web/kebunjio/eslint-report.json

      # Step 5: Run Snyk Security Scan for Vulnerabilities
      - name: Run Snyk Security Scan
        run: |
          cd Web/kebunjio  
          snyk test  # âœ… Run Snyk scan in the correct directory
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}  
      - name: Upload Snyk Report
        uses: actions/upload-artifact@v4
        with:
          name: snyk-reports
          path: Web/kebunjio/snyk-report.json
      # Step 6: Build React Frontend
      - name: Build React Frontend
        working-directory: Web/kebunjio
        run: CI=false npm run build
