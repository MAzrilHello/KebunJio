name: Manual Deploy

on:
  push:
    branches:
      -staging_v2
  workflow_dispatch: #
    inputs:
      deploy_message:
        description: 'Optional deploy message'
        required: false
        default: 'Deploy triggered'


jobs:
  # Build Stage
  build:
    runs-on: ubuntu-latest # build environment set as Ubuntu
    outputs:
      docker-image: ${{ steps.build-docker.outputs.image-tag}}

    steps:
      # Checkout Project Code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set the project JDK
      - name: Set up JDK 
        uses: actions/setup-java@v3
        with:
          java-version: '17' # set JDK version
          distribution: 'temurin'

      # Cache Mvn project Dependency
      - name: Cache Mvn dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Build Project
      - name: Build with Mvn
        run: mvn clean install -DskipTests=true
        working-directory: Backend/KebunJio

      # Run test (Junit)
      - name: Run tests with Mvn
        run: mvn test
        working-directory: Backend/KebunJio

      - name: Update test report
        uses: actions/upload-artifact@v4
        with:
          name: junit-reports
          path: Backend/KebunJio/target/surefire-reports/*.xml
      

      # Generate JAR file
      - name: Build JAR
        run: mvn clean package -DskipTests=true
        working-directory: Backend/KebunJio
      
      # If we use Docker
      # Build Docker Iamge
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_NAME }}/kebunjio:${{ github.sha }} .
        working-directory: Backend/KebunJio

      # Login Dockerhub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_NAME }} # Write in Github Secrets
          password: ${{ secrets.DOCKERHUB_PASSWORD }} # Write in Github Secrets 

      # Push image to Dockerhub
      - name: Push Docker image
        # if: ${{ github.event.inputs.build_docker == 'true' }}
        working-directory: Backend/KebunJio
        run: |
          docker push ${{ secrets.DOCKERHUB_NAME }}/kebunjio:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout Project Code
      - name: Checkout code
        uses: actions/checkout@v3
      
      # Setup SSH key
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/google_cloud_key
          chmod 600 ~/.ssh/google_cloud_key
          ssh-keyscan -H 34.124.209.141 >> ~/.ssh/known_hosts

      # Connect to Target Server
      - name: Connect Server
        run: |
          ssh -i ~/.ssh/google_cloud_key team02@34.124.209.141 "echo 'SSH connection successful!'"

      # Pull Docker image
      - name: Pull Docker image
        run: |
          ssh -i ~/.ssh/google_cloud_key team02@34.124.209.141 << EOF
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
            docker pull ${{ secrets.DOCKERHUB_NAME }}/kebunjio:${{ github.sha }}
            docker stop kebunjioBE || true && docker rm kebunjioBE || true
            docker run --rm --network host --name kebunjioBE -d ${{ secrets.DOCKERHUB_NAME }}/kebunjio:${{ github.sha }}
          EOF
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}

